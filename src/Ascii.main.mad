import Char from "Char"
import Dict from "Dictionary"
import Float from "Float"
import IO from "IO"
import Integer from "Integer"
import List from "List"
import Math from "Math"
import { fromMaybe } from "Maybe"
import String from "String"

import Ascii from "@/Ascii"



hex = {{
  0: "0",
  1: "1",
  2: "2",
  3: "3",
  4: "4",
  5: "5",
  6: "6",
  7: "7",
  8: "8",
  9: "9",
  10: "A",
  11: "B",
  12: "C",
  13: "D",
  14: "E",
  15: "F",
}}


toHex = (x) => pipe(
  Math.floor,
  List.range(0),
  List.reduce(
    (agg, j) => if (Math.floor(agg.value) > 0) do {
      i = Integer.fromFloat(agg.value)
      rem = Math.mod(i, 16)
      value = agg.value / 16
      return { stack: [rem, ...agg.stack], value }
    } else {
      agg
    },
    { stack: [], value: x },
  ),
  .stack,
  map(
    pipe(
      Dict.get($, hex),
      fromMaybe("0"),
    ),
  ),
  String.join(""),
)(x / 16)


main = () => {
  pipe(
    String.toList,
    (chars) => {
      IO.pTrace("COUNT!", List.length(chars))
      return chars
    },
    IO.pTrace("CHARS!"),
    map(Char.toShort),
    IO.pTrace("SHORTS!"),
    map(
      pipe(
        Float.fromShort,
        toHex,
      ),
    ),
    IO.pTrace("PANTS!"),
  )("あいう★")
  // )("🥺😆👱🏽‍♂️")

  aligner = { header: Ascii.AlignLeft, content: Ascii.AlignCenter, footer: Ascii.AlignRight }
  Ascii.renderBox(
    { max: 4, content: 4, header: 4, footer: 4 },
    aligner,
    Ascii.unpadded("four", IO.red(">><<"), "hey!"),
  )
    |> IO.putLine
  Ascii.renderBox(
    { max: 8, content: 8, header: 8, footer: 8 },
    aligner,
    Ascii.basicBox("butthead", IO.red("{{cool}}"), IO.green("greenie")),
  )
    |> IO.putLine
  Ascii.renderBox(
    { max: 4, content: 8, header: 10, footer: 8 },
    aligner,
    Ascii.unpadded("yo", IO.red("cool"), "hey!"),
  )
    |> IO.putLine
  Ascii.renderBox(
    { max: 40, content: 40, header: 78, footer: 76 },
    { header: Ascii.AlignRight, content: Ascii.AlignLeft, footer: Ascii.AlignLeft },
    Ascii.unpadded("yo", IO.red("cool"), "Hey what does a long sentence look like?"),
  )
    |> IO.putLine
  Ascii.renderBox(
    { max: 40, content: 40, header: 80, footer: 78 },
    { header: Ascii.AlignRight, content: Ascii.AlignLeft, footer: Ascii.AlignLeft },
    Ascii.basicBox("yo", IO.red("cool"), "Hey what does a long sentence look like?"),
  )
    |> IO.putLine
  Ascii.renderBox(
    { max: 7, content: 7, header: 7, footer: 7 },
    aligner,
    Ascii.basicBox("", "", "あいう★"),
  )
    |> IO.putLine
  autoSizes = { max: 0, content: 0, header: 0, footer: 0 }
  Ascii.renderBox(autoSizes, aligner, Ascii.unpadded("", "", "-> 😎 <-")) |> IO.put
  Ascii.renderBox(autoSizes, aligner, Ascii.unpadded("", "", "-> 😎 <-")) |> IO.putLine
}

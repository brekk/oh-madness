import type { Pattern } from "@/RegExp"

import Pattern from "@/RegExp"



ANSI_REGEX1 = "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)"

ANSI_REGEX2 = "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"

ANSI_PATTERN = `${ANSI_REGEX1}|${ANSI_REGEX2}`

export ANSI = Pattern.create(ANSI_PATTERN, "")
export ANSI_GLOBAL = Pattern.create(ANSI_PATTERN, "g")

strip :: String -> String
export strip = Pattern.unsafeReplace(ANSI_GLOBAL, "")

isControlChar :: Short -> Boolean
export isControlChar = (x) => x <= 0x1F || (x >= 0x7F && x <= 0x9F)

// x >= 0x3_00 && x <= 0x3
isCombinatoryChar :: Short -> Boolean
export isCombinatoryChar = (x) => x >= 768 && x <= 879
